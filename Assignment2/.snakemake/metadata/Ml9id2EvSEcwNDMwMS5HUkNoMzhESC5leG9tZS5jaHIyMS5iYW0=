{"version": null, "code": "gASVOQYAAAAAAAAoQxJ0AGQBfA58EWQCjQMBAGQAUwCUKIwFaW5wdXSUjAZvdXRwdXSUjAZwYXJhbXOUjAl3aWxkY2FyZHOUjAd0aHJlYWRzlIwJcmVzb3VyY2VzlIwDbG9nlIwHdmVyc2lvbpSMBHJ1bGWUjAljb25kYV9lbnaUjA1jb250YWluZXJfaW1nlIwQc2luZ3VsYXJpdHlfYXJnc5SMD3VzZV9zaW5ndWxhcml0eZSMC2Vudl9tb2R1bGVzlIwMYmVuY2hfcmVjb3JklIwFam9iaWSUjAhpc19zaGVsbJSMD2JlbmNoX2l0ZXJhdGlvbpSMD2NsZWFudXBfc2NyaXB0c5SMCnNoYWRvd19kaXKUjA1lZGl0X25vdGVib29rlIwPY29uZGFfYmFzZV9wYXRolIwHYmFzZWRpcpSMGHJ1bnRpbWVfc291cmNlY2FjaGVfcGF0aJSMGF9faXNfc25ha2VtYWtlX3J1bGVfZnVuY5R0lF2UKE5YqwQAAAogICAgICAgIGV4cG9ydCBQQVRIPS9sdXN0cmUxL3Byb2plY3Qvc3RnXzAwMDc5L3RlYWNoaW5nL0kwVTE5YV9jb25kYV8yMDI0L2JpbjokUEFUSAoKICAgICAgICBlY2hvICJQZXJmb3JtaW5nIEJXQSBvbjoge3dpbGRjYXJkcy5zYW1wbGV9ICIKCiAgICAgICAgIyBDaGVjayBpZiB0aGVyZSBhcmUgYXQgbGVhc3QgMjQgZmlsZXMgaW4gdGhlIHBhcmFtcy5kYiBiZWdpbm5pbmcgd2l0aCAic2VxdWVuY2UiCiAgICAgICAgaWYgWyAkKGxzIC0xIHtwYXJhbXMuZGJ9L3NlcXVlbmNlKiAyPi9kZXYvbnVsbCB8IHdjIC1sKSAtZ2UgMjQgXTsgdGhlbgogICAgICAgICAgICBlY2hvICJFcnJvcjogTGVzcyB0aGFuIDI0IGZpbGVzIGJlZ2lubmluZyB3aXRoICdzZXF1ZW5jZScgZm91bmQuIgogICAgICAgICAgICBmYWxzZQogICAgICAgIGZpCgogICAgICAgICMgQ2hlY2sgaWYgYSBmaWxlIGJlZ2lubmluZyB3aXRoICJjeXRvQmFuZCIgZXhpc3RzCiAgICAgICAgaWYgdGVzdCAtZSAiJHtwYXJhbXMuZGJ9L2N5dG9CYW5kIio7IHRoZW4KICAgICAgICAgICAgZWNobyAiRXJyb3I6IE5vIGZpbGUgYmVnaW5uaW5nIHdpdGggJ2N5dG9CYW5kJyBmb3VuZC4iCiAgICAgICAgICAgIGZhbHNlCiAgICAgICAgZmkKCiAgICAgICAgIyBDaGVjayBpZiBhIGZpbGUgYmVnaW5uaW5nIHdpdGggInB3bXMiIGV4aXN0cwogICAgICAgIGlmIHRlc3QgLWUgIiR7cGFyYW1zLmRifS9wd21zIio7IHRoZW4KICAgICAgICAgICAgZWNobyAiRXJyb3I6IE5vIGZpbGUgYmVnaW5uaW5nIHdpdGggJ3B3bXMnIGZvdW5kLiIKICAgICAgICAgICAgZmFsc2UKICAgICAgICBmaQoKICAgICAgICAjIENoZWNrIGlmIGEgZmlsZSBiZWdpbm5pbmcgd2l0aCAic25wRWZmZWN0UHJlZGljdG9yIiBleGlzdHMKICAgICAgICBpZiB0ZXN0IC1lICIke3BhcmFtcy5kYn0vc25wRWZmZWN0UHJlZGljdG9yIio7IHRoZW4KICAgICAgICAgICAgZWNobyAiRXJyb3I6IE5vIGZpbGUgYmVnaW5uaW5nIHdpdGggJ3NucEVmZmVjdFByZWRpY3RvcicgZm91bmQuIgogICAgICAgICAgICBmYWxzZQogICAgICAgIGZpCgogICAgICAgIGJ3YSBtZW0ge3BhcmFtcy5kYn0ge2lucHV0fSAgICAgICAgICAgICB8IHNhbXRvb2xzIHNvcnQgLSAgICAgICAgICAgICA+IHtvdXRwdXQuYmFtfQogICAgICAgIHNhbXRvb2xzIGluZGV4IHtvdXRwdXQuYmFtfQoKICAKICAgICAgICCUaA9oEoaUZYwFc2hlbGyUhZR0lC4=", "rule": "bwa", "input": ["/staging/leuven/stg_00079/teaching/1000genomes/HG04301.GRCh38DH.exome.chr21.fq.gz"], "log": [], "params": ["'/lustre1/project/stg_00079/teaching/hg38_21/chr21.fa'"], "shellcmd": "\n        export PATH=/lustre1/project/stg_00079/teaching/I0U19a_conda_2024/bin:$PATH\n\n        echo \"Performing BWA on: HG04301.GRCh38DH.exome.chr21 \"\n\n        # Check if there are at least 24 files in the params.db beginning with \"sequence\"\n        if [ $(ls -1 /lustre1/project/stg_00079/teaching/hg38_21/chr21.fa/sequence* 2>/dev/null | wc -l) -ge 24 ]; then\n            echo \"Error: Less than 24 files beginning with 'sequence' found.\"\n            false\n        fi\n\n        # Check if a file beginning with \"cytoBand\" exists\n        if test -e \"$/lustre1/project/stg_00079/teaching/hg38_21/chr21.fa/cytoBand\"*; then\n            echo \"Error: No file beginning with 'cytoBand' found.\"\n            false\n        fi\n\n        # Check if a file beginning with \"pwms\" exists\n        if test -e \"$/lustre1/project/stg_00079/teaching/hg38_21/chr21.fa/pwms\"*; then\n            echo \"Error: No file beginning with 'pwms' found.\"\n            false\n        fi\n\n        # Check if a file beginning with \"snpEffectPredictor\" exists\n        if test -e \"$/lustre1/project/stg_00079/teaching/hg38_21/chr21.fa/snpEffectPredictor\"*; then\n            echo \"Error: No file beginning with 'snpEffectPredictor' found.\"\n            false\n        fi\n\n        bwa mem /lustre1/project/stg_00079/teaching/hg38_21/chr21.fa /staging/leuven/stg_00079/teaching/1000genomes/HG04301.GRCh38DH.exome.chr21.fq.gz             | samtools sort -             > 2_bwa/HG04301.GRCh38DH.exome.chr21.bam\n        samtools index 2_bwa/HG04301.GRCh38DH.exome.chr21.bam\n\n  \n        ", "incomplete": false, "starttime": 1714608190.077191, "endtime": 1714608247.930274, "job_hash": 1462190702014, "conda_env": null, "container_img_url": null, "input_checksums": {}}